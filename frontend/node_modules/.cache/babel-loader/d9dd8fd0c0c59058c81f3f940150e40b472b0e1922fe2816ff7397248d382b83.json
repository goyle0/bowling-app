{"ast":null,"code":"import { bowlingApi } from '../api/bowlingApi';\nexport default {\n  name: 'Game',\n  data() {\n    return {\n      gameId: null,\n      frames: [],\n      currentFrameIndex: 0,\n      currentRoll: 1,\n      loading: false,\n      error: null\n    };\n  },\n  async created() {\n    try {\n      this.loading = true;\n      const game = await bowlingApi.createGame();\n      this.gameId = game.id;\n      const frames = await bowlingApi.getFrames(this.gameId);\n      this.frames = frames;\n      this.loading = false;\n    } catch (err) {\n      this.error = 'ゲームの作成に失敗しました';\n      this.loading = false;\n    }\n  },\n  computed: {\n    totalScore() {\n      return this.frames.reduce((total, frame) => total + (frame.frameScore || 0), 0);\n    },\n    availablePins() {\n      if (this.currentFrameIndex === 9) {\n        if (this.currentRoll === 1) {\n          return [...Array(11)].map((_, i) => i);\n        } else if (this.currentRoll === 2) {\n          if (this.frames[9].firstRoll === 10) {\n            return [...Array(11)].map((_, i) => i);\n          } else {\n            return [...Array(11 - this.frames[9].firstRoll)].map((_, i) => i);\n          }\n        } else if (this.currentRoll === 3) {\n          if (this.frames[9].secondRoll === 10 || this.frames[9].firstRoll + this.frames[9].secondRoll === 10) {\n            return [...Array(11)].map((_, i) => i);\n          }\n          return [];\n        }\n      } else {\n        if (this.currentRoll === 1) {\n          return [...Array(11)].map((_, i) => i);\n        } else {\n          return [...Array(11 - this.frames[this.currentFrameIndex].firstRoll)].map((_, i) => i);\n        }\n      }\n      return [];\n    }\n  },\n  methods: {\n    formatRoll(roll) {\n      if (roll === null) return '';\n      if (roll === 10) return 'X';\n      if (this.currentRoll === 2 && roll + this.frames[this.currentFrameIndex].firstRoll === 10) return '/';\n      return roll.toString();\n    },\n    async recordRoll(pins) {\n      try {\n        this.loading = true;\n        const frame = this.frames[this.currentFrameIndex];\n        if (this.currentRoll === 1) {\n          if (pins === 10 && this.currentFrameIndex < 9) {\n            this.currentFrameIndex++;\n          } else {\n            this.currentRoll = 2;\n          }\n        } else if (this.currentRoll === 2) {\n          if (this.currentFrameIndex < 9) {\n            this.currentFrameIndex++;\n            this.currentRoll = 1;\n          } else if (frame.firstRoll === 10 || frame.firstRoll + pins === 10) {\n            this.currentRoll = 3;\n          } else {\n            this.currentFrameIndex++;\n          }\n        } else if (this.currentRoll === 3 && this.currentFrameIndex === 9) {\n          this.currentFrameIndex++;\n        }\n        await bowlingApi.recordRoll(this.gameId, this.currentFrameIndex + 1, pins);\n        const updatedFrames = await bowlingApi.getFrames(this.gameId);\n        this.frames = updatedFrames;\n        this.loading = false;\n      } catch (err) {\n        this.error = '投球の記録に失敗しました';\n        this.loading = false;\n      }\n    },\n    async newGame() {\n      try {\n        this.loading = true;\n        const game = await bowlingApi.createGame();\n        this.gameId = game.id;\n        const frames = await bowlingApi.getFrames(this.gameId);\n        this.frames = frames;\n        this.currentFrameIndex = 0;\n        this.currentRoll = 1;\n        this.error = null;\n        this.loading = false;\n      } catch (err) {\n        this.error = '新しいゲームの作成に失敗しました';\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["bowlingApi","name","data","gameId","frames","currentFrameIndex","currentRoll","loading","error","created","game","createGame","id","getFrames","err","computed","totalScore","reduce","total","frame","frameScore","availablePins","Array","map","_","i","firstRoll","secondRoll","methods","formatRoll","roll","toString","recordRoll","pins","updatedFrames","newGame"],"sources":["/home/sho/Desktop/bowling-app/frontend/src/views/Game.vue"],"sourcesContent":["<template>\n    <div class=\"game\">\n        <h1>ボウリングゲーム</h1>\n        <div v-if=\"loading\" class=\"loading\">\n            Loading...\n        </div>\n        <div v-else-if=\"error\" class=\"error\">\n            {{ error }}\n        </div>\n        <div v-else>\n            <div class=\"score-board\">\n                <div class=\"frames\">\n                    <div v-for=\"(frame, index) in frames\" :key=\"index\" class=\"frame\">\n                        <div class=\"frame-number\">{{ index + 1 }}</div>\n                        <div class=\"rolls\">\n                            <span class=\"roll\">{{ formatRoll(frame.firstRoll) }}</span>\n                            <span class=\"roll\">{{ formatRoll(frame.secondRoll) }}</span>\n                            <span v-if=\"index === 9\" class=\"roll\">{{ formatRoll(frame.thirdRoll) }}</span>\n                        </div>\n                        <div class=\"frame-score\">{{ frame.frameScore }}</div>\n                    </div>\n                </div>\n                <div class=\"total-score\">\n                    合計スコア: {{ totalScore }}\n                </div>\n            </div>\n            \n            <div class=\"input-section\" v-if=\"currentFrameIndex < 10\">\n                <h2>フレーム {{ currentFrameIndex + 1 }}</h2>\n                <div class=\"pins-input\">\n                    <button \n                        v-for=\"pins in availablePins\" \n                        :key=\"pins\"\n                        @click=\"recordRoll(pins)\"\n                        class=\"pin-button\"\n                        :disabled=\"loading\"\n                    >\n                        {{ pins }}\n                    </button>\n                </div>\n            </div>\n            \n            <div v-else class=\"game-complete\">\n                <h2>ゲーム終了！</h2>\n                <button @click=\"newGame\" class=\"new-game-button\" :disabled=\"loading\">\n                    新しいゲームを開始\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { bowlingApi } from '../api/bowlingApi'\n\nexport default {\n    name: 'Game',\n    data() {\n        return {\n            gameId: null,\n            frames: [],\n            currentFrameIndex: 0,\n            currentRoll: 1,\n            loading: false,\n            error: null\n        }\n    },\n    async created() {\n        try {\n            this.loading = true\n            const game = await bowlingApi.createGame()\n            this.gameId = game.id\n            const frames = await bowlingApi.getFrames(this.gameId)\n            this.frames = frames\n            this.loading = false\n        } catch (err) {\n            this.error = 'ゲームの作成に失敗しました'\n            this.loading = false\n        }\n    },\n    computed: {\n        totalScore() {\n            return this.frames.reduce((total, frame) => total + (frame.frameScore || 0), 0)\n        },\n        availablePins() {\n            if (this.currentFrameIndex === 9) {\n                if (this.currentRoll === 1) {\n                    return [...Array(11)].map((_, i) => i)\n                } else if (this.currentRoll === 2) {\n                    if (this.frames[9].firstRoll === 10) {\n                        return [...Array(11)].map((_, i) => i)\n                    } else {\n                        return [...Array(11 - this.frames[9].firstRoll)].map((_, i) => i)\n                    }\n                } else if (this.currentRoll === 3) {\n                    if (this.frames[9].secondRoll === 10 || \n                        this.frames[9].firstRoll + this.frames[9].secondRoll === 10) {\n                        return [...Array(11)].map((_, i) => i)\n                    }\n                    return []\n                }\n            } else {\n                if (this.currentRoll === 1) {\n                    return [...Array(11)].map((_, i) => i)\n                } else {\n                    return [...Array(11 - this.frames[this.currentFrameIndex].firstRoll)].map((_, i) => i)\n                }\n            }\n            return []\n        }\n    },\n    methods: {\n        formatRoll(roll) {\n            if (roll === null) return ''\n            if (roll === 10) return 'X'\n            if (this.currentRoll === 2 && roll + this.frames[this.currentFrameIndex].firstRoll === 10) return '/'\n            return roll.toString()\n        },\n        async recordRoll(pins) {\n            try {\n                this.loading = true\n                const frame = this.frames[this.currentFrameIndex]\n                \n                if (this.currentRoll === 1) {\n                    if (pins === 10 && this.currentFrameIndex < 9) {\n                        this.currentFrameIndex++\n                    } else {\n                        this.currentRoll = 2\n                    }\n                } else if (this.currentRoll === 2) {\n                    if (this.currentFrameIndex < 9) {\n                        this.currentFrameIndex++\n                        this.currentRoll = 1\n                    } else if (frame.firstRoll === 10 || frame.firstRoll + pins === 10) {\n                        this.currentRoll = 3\n                    } else {\n                        this.currentFrameIndex++\n                    }\n                } else if (this.currentRoll === 3 && this.currentFrameIndex === 9) {\n                    this.currentFrameIndex++\n                }\n\n                await bowlingApi.recordRoll(this.gameId, this.currentFrameIndex + 1, pins)\n                const updatedFrames = await bowlingApi.getFrames(this.gameId)\n                this.frames = updatedFrames\n                this.loading = false\n            } catch (err) {\n                this.error = '投球の記録に失敗しました'\n                this.loading = false\n            }\n        },\n        async newGame() {\n            try {\n                this.loading = true\n                const game = await bowlingApi.createGame()\n                this.gameId = game.id\n                const frames = await bowlingApi.getFrames(this.gameId)\n                this.frames = frames\n                this.currentFrameIndex = 0\n                this.currentRoll = 1\n                this.error = null\n                this.loading = false\n            } catch (err) {\n                this.error = '新しいゲームの作成に失敗しました'\n                this.loading = false\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.game {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.loading, .error {\n    text-align: center;\n    margin: 20px 0;\n    padding: 20px;\n    border-radius: 4px;\n}\n\n.loading {\n    background-color: #f8f9fa;\n    color: #666;\n}\n\n.error {\n    background-color: #f8d7da;\n    color: #721c24;\n}\n\n.score-board {\n    margin: 20px 0;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 4px;\n}\n\n.frames {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n}\n\n.frame {\n    flex: 1;\n    margin: 0 5px;\n    padding: 10px;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\n.frame-number {\n    font-size: 0.8em;\n    color: #666;\n}\n\n.rolls {\n    display: flex;\n    justify-content: space-around;\n    margin: 5px 0;\n}\n\n.roll {\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n    border: 1px solid #ddd;\n    text-align: center;\n    line-height: 20px;\n    font-size: 0.9em;\n}\n\n.frame-score {\n    font-weight: bold;\n    color: #42b983;\n}\n\n.total-score {\n    font-size: 1.5em;\n    font-weight: bold;\n    text-align: right;\n    color: #2c3e50;\n}\n\n.input-section {\n    margin-top: 40px;\n}\n\n.pins-input {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    justify-content: center;\n}\n\n.pin-button {\n    width: 50px;\n    height: 50px;\n    border: none;\n    border-radius: 25px;\n    background-color: #42b983;\n    color: white;\n    font-size: 1.2em;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.pin-button:not(:disabled):hover {\n    background-color: #3aa876;\n}\n\n.pin-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n\n.game-complete {\n    text-align: center;\n    margin-top: 40px;\n}\n\n.new-game-button {\n    background-color: #42b983;\n    color: white;\n    padding: 15px 30px;\n    border: none;\n    border-radius: 4px;\n    font-size: 1.2em;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.new-game-button:not(:disabled):hover {\n    background-color: #3aa876;\n}\n\n.new-game-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}