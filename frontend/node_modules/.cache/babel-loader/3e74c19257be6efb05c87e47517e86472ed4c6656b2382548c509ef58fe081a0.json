{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  class: \"score-board\"\n};\nconst _hoisted_6 = {\n  class: \"frames\"\n};\nconst _hoisted_7 = {\n  class: \"frame-number\"\n};\nconst _hoisted_8 = {\n  class: \"rolls\"\n};\nconst _hoisted_9 = {\n  class: \"roll\"\n};\nconst _hoisted_10 = {\n  class: \"roll\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"roll\"\n};\nconst _hoisted_12 = {\n  class: \"frame-score\"\n};\nconst _hoisted_13 = {\n  class: \"total-score\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"input-section\"\n};\nconst _hoisted_15 = {\n  class: \"pins-input\"\n};\nconst _hoisted_16 = [\"onClick\", \"disabled\"];\nconst _hoisted_17 = {\n  key: 1,\n  class: \"game-complete\"\n};\nconst _hoisted_18 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"ボウリングゲーム\", -1)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Loading... \")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.frames, (frame, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"frame\"\n    }, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(index + 1), 1), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString($options.formatRoll(frame.firstRoll)), 1), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($options.formatRoll(frame.secondRoll)), 1), index === 9 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString($options.formatRoll(frame.thirdRoll)), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(frame.frameScore), 1)]);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_13, \" 合計スコア: \" + _toDisplayString($options.totalScore), 1)]), $data.currentFrameIndex < 10 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"h2\", null, \"フレーム \" + _toDisplayString($data.currentFrameIndex + 1), 1), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.availablePins, pins => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: pins,\n      onClick: $event => $options.recordRoll(pins),\n      class: \"pin-button\",\n      disabled: $data.loading\n    }, _toDisplayString(pins), 9, _hoisted_16);\n  }), 128))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"ゲーム終了！\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.newGame && $options.newGame(...args)),\n    class: \"new-game-button\",\n    disabled: $data.loading\n  }, \" 新しいゲームを開始 \", 8, _hoisted_18)]))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","frames","frame","index","_hoisted_7","_hoisted_8","_hoisted_9","$options","formatRoll","firstRoll","_hoisted_10","secondRoll","_hoisted_11","thirdRoll","_createCommentVNode","_hoisted_12","frameScore","_hoisted_13","totalScore","currentFrameIndex","_hoisted_14","_hoisted_15","availablePins","pins","onClick","$event","recordRoll","disabled","_hoisted_16","_hoisted_17","_cache","args","newGame","_hoisted_18"],"sources":["/home/sho/Desktop/bowling-app/frontend/src/views/Game.vue"],"sourcesContent":["<template>\n    <div class=\"game\">\n        <h1>ボウリングゲーム</h1>\n        <div v-if=\"loading\" class=\"loading\">\n            Loading...\n        </div>\n        <div v-else-if=\"error\" class=\"error\">\n            {{ error }}\n        </div>\n        <div v-else>\n            <div class=\"score-board\">\n                <div class=\"frames\">\n                    <div v-for=\"(frame, index) in frames\" :key=\"index\" class=\"frame\">\n                        <div class=\"frame-number\">{{ index + 1 }}</div>\n                        <div class=\"rolls\">\n                            <span class=\"roll\">{{ formatRoll(frame.firstRoll) }}</span>\n                            <span class=\"roll\">{{ formatRoll(frame.secondRoll) }}</span>\n                            <span v-if=\"index === 9\" class=\"roll\">{{ formatRoll(frame.thirdRoll) }}</span>\n                        </div>\n                        <div class=\"frame-score\">{{ frame.frameScore }}</div>\n                    </div>\n                </div>\n                <div class=\"total-score\">\n                    合計スコア: {{ totalScore }}\n                </div>\n            </div>\n            \n            <div class=\"input-section\" v-if=\"currentFrameIndex < 10\">\n                <h2>フレーム {{ currentFrameIndex + 1 }}</h2>\n                <div class=\"pins-input\">\n                    <button \n                        v-for=\"pins in availablePins\" \n                        :key=\"pins\"\n                        @click=\"recordRoll(pins)\"\n                        class=\"pin-button\"\n                        :disabled=\"loading\"\n                    >\n                        {{ pins }}\n                    </button>\n                </div>\n            </div>\n            \n            <div v-else class=\"game-complete\">\n                <h2>ゲーム終了！</h2>\n                <button @click=\"newGame\" class=\"new-game-button\" :disabled=\"loading\">\n                    新しいゲームを開始\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { bowlingApi } from '../api/bowlingApi'\n\nexport default {\n    name: 'Game',\n    data() {\n        return {\n            gameId: null,\n            frames: [],\n            currentFrameIndex: 0,\n            currentRoll: 1,\n            loading: false,\n            error: null\n        }\n    },\n    async created() {\n        try {\n            this.loading = true\n            const game = await bowlingApi.createGame()\n            this.gameId = game.id\n            const frames = await bowlingApi.getFrames(this.gameId)\n            this.frames = frames\n            this.loading = false\n        } catch (err) {\n            this.error = 'ゲームの作成に失敗しました'\n            this.loading = false\n        }\n    },\n    computed: {\n        totalScore() {\n            return this.frames.reduce((total, frame) => total + (frame.frameScore || 0), 0)\n        },\n        availablePins() {\n            if (this.currentFrameIndex === 9) {\n                if (this.currentRoll === 1) {\n                    return [...Array(11)].map((_, i) => i)\n                } else if (this.currentRoll === 2) {\n                    if (this.frames[9].firstRoll === 10) {\n                        return [...Array(11)].map((_, i) => i)\n                    } else {\n                        return [...Array(11 - this.frames[9].firstRoll)].map((_, i) => i)\n                    }\n                } else if (this.currentRoll === 3) {\n                    if (this.frames[9].secondRoll === 10 || \n                        this.frames[9].firstRoll + this.frames[9].secondRoll === 10) {\n                        return [...Array(11)].map((_, i) => i)\n                    }\n                    return []\n                }\n            } else {\n                if (this.currentRoll === 1) {\n                    return [...Array(11)].map((_, i) => i)\n                } else {\n                    return [...Array(11 - this.frames[this.currentFrameIndex].firstRoll)].map((_, i) => i)\n                }\n            }\n            return []\n        }\n    },\n    methods: {\n        formatRoll(roll) {\n            if (roll === null) return ''\n            if (roll === 10) return 'X'\n            if (this.currentRoll === 2 && roll + this.frames[this.currentFrameIndex].firstRoll === 10) return '/'\n            return roll.toString()\n        },\n        async recordRoll(pins) {\n            try {\n                this.loading = true\n                const frame = this.frames[this.currentFrameIndex]\n                \n                if (this.currentRoll === 1) {\n                    if (pins === 10 && this.currentFrameIndex < 9) {\n                        this.currentFrameIndex++\n                    } else {\n                        this.currentRoll = 2\n                    }\n                } else if (this.currentRoll === 2) {\n                    if (this.currentFrameIndex < 9) {\n                        this.currentFrameIndex++\n                        this.currentRoll = 1\n                    } else if (frame.firstRoll === 10 || frame.firstRoll + pins === 10) {\n                        this.currentRoll = 3\n                    } else {\n                        this.currentFrameIndex++\n                    }\n                } else if (this.currentRoll === 3 && this.currentFrameIndex === 9) {\n                    this.currentFrameIndex++\n                }\n\n                await bowlingApi.recordRoll(this.gameId, this.currentFrameIndex + 1, pins)\n                const updatedFrames = await bowlingApi.getFrames(this.gameId)\n                this.frames = updatedFrames\n                this.loading = false\n            } catch (err) {\n                this.error = '投球の記録に失敗しました'\n                this.loading = false\n            }\n        },\n        async newGame() {\n            try {\n                this.loading = true\n                const game = await bowlingApi.createGame()\n                this.gameId = game.id\n                const frames = await bowlingApi.getFrames(this.gameId)\n                this.frames = frames\n                this.currentFrameIndex = 0\n                this.currentRoll = 1\n                this.error = null\n                this.loading = false\n            } catch (err) {\n                this.error = '新しいゲームの作成に失敗しました'\n                this.loading = false\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.game {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.loading, .error {\n    text-align: center;\n    margin: 20px 0;\n    padding: 20px;\n    border-radius: 4px;\n}\n\n.loading {\n    background-color: #f8f9fa;\n    color: #666;\n}\n\n.error {\n    background-color: #f8d7da;\n    color: #721c24;\n}\n\n.score-board {\n    margin: 20px 0;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 4px;\n}\n\n.frames {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n}\n\n.frame {\n    flex: 1;\n    margin: 0 5px;\n    padding: 10px;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\n.frame-number {\n    font-size: 0.8em;\n    color: #666;\n}\n\n.rolls {\n    display: flex;\n    justify-content: space-around;\n    margin: 5px 0;\n}\n\n.roll {\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n    border: 1px solid #ddd;\n    text-align: center;\n    line-height: 20px;\n    font-size: 0.9em;\n}\n\n.frame-score {\n    font-weight: bold;\n    color: #42b983;\n}\n\n.total-score {\n    font-size: 1.5em;\n    font-weight: bold;\n    text-align: right;\n    color: #2c3e50;\n}\n\n.input-section {\n    margin-top: 40px;\n}\n\n.pins-input {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    justify-content: center;\n}\n\n.pin-button {\n    width: 50px;\n    height: 50px;\n    border: none;\n    border-radius: 25px;\n    background-color: #42b983;\n    color: white;\n    font-size: 1.2em;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.pin-button:not(:disabled):hover {\n    background-color: #3aa876;\n}\n\n.pin-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n\n.game-complete {\n    text-align: center;\n    margin-top: 40px;\n}\n\n.new-game-button {\n    background-color: #42b983;\n    color: white;\n    padding: 15px 30px;\n    border: none;\n    border-radius: 4px;\n    font-size: 1.2em;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.new-game-button:not(:disabled):hover {\n    background-color: #3aa876;\n}\n\n.new-game-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}